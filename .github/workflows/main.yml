name: Java CI/CD with Spring

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    # Passo 1: Checkout do repositório
    - name: Checkout repository
      uses: actions/checkout@v2

    # Passo 2: Navegar até o diretório do backend
    - name: Change directory to backend
      run: cd PaoFacil/backend

    # Passo 3: Configurar JDK 17
    - name: Set up JDK 17
      uses: actions/setup-java@v2
      with:
        java-version: '17'
        distribution: 'temurin'  # Usando o Temurin (Adoptium) JDK

    # Passo 4: Cache das dependências do Maven para acelerar o build
    - name: Cache Maven packages
      uses: actions/cache@v2
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-m2-

    # Passo 5: Build com Maven
    - name: Build with Maven
      run: ./mvnw clean install -DskipTests

    # Passo 6: Testar com Maven
    - name: Test with Maven
      run: ./mvnw test

    # Passo 7: Executar testes de integração (opcional)
    - name: Run integration tests
      run: ./mvnw verify -Pintegration-tests

    # Passo 8: Empacotar a aplicação Spring Boot
    - name: Package Spring Boot application
      run: ./mvnw package -DskipTests

    # Passo 9: Fazer upload do artefato (JAR)
    - name: Upload JAR artifact
      uses: actions/upload-artifact@v2
      with:
        name: spring-boot-app
        path: PaoFacil/backend/target/*.jar

    # Passo 10: Implantação (opcional, dependendo do ambiente)
    # - name: Deploy to production
    #   run: ./deploy.sh
