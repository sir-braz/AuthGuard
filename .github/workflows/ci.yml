name: Spring Boot CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  backend:
    runs-on: ubuntu-latest
    steps:
      # Passo 1: Checkout do código
      - name: Checkout do código
        uses: actions/checkout@v2

      # Passo 2: Configurar JDK 11 (usando Adoptium)
      - name: Configurar JDK 11 (Adoptium)
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'temurin'  # Usando a distribuição 'temurin'

      # Passo 3: Rodar testes com Maven
      - name: Rodar testes com Maven
        run: mvn clean test -f backend/pom.xml

      # Passo 4: Build do projeto
      - name: Build do projeto
        run: mvn package -f backend/pom.xml

      # Passo 5: Configuração do Docker Buildx (para multi-plataforma)
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Passo 6: Login no Docker Hub
      - name: Log in to Docker Hub
        run: |
          echo ${{ secrets.DOCKER_PASSWORD }} | docker login --username ${{ secrets.DOCKER_USERNAME }} --password-stdin

      # Passo 7: Construir a imagem Docker
      - name: Build Docker image
        run: |
          docker build -f ./backend/Dockerfile -t ${{ secrets.DOCKER_USERNAME }}/your-image-name ./backend

      # Passo 8: Enviar a imagem Docker para o Docker Hub
      - name: Push Docker image
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/your-image-name

      # Passo 9: Deploy no Azure App Service
      - name: Deploy to Azure App Service
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ secrets.AZURE_WEBAPP_NAME }}  # Nome do Azure App Service
          slot-name: 'production'  # Nome do slot (pode ser 'production' ou outro slot configurado)
          images: ${{ secrets.DOCKER_USERNAME }}/your-image-name:latest  # Imagem Docker a ser usada
        env:
          AZURE_CREDENTIALS: ${{ secrets.AZURE_CREDENTIALS }}  # Credenciais de acesso ao Azure
