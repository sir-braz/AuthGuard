name: CI/CD Pipeline para Pão Fácil

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  backend:
    runs-on: ubuntu-latest
    steps:
      # Passo 1: Checkout do código
      - name: Checkout do código
        uses: actions/checkout@v2

      # Passo 2: Navegar até o diretório do backend
      - name: Mudar para o diretório do backend
        run: cd backend

      # Passo 3: Configurar JDK para Spring Boot
      - name: Configurar JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adoptopenjdk'

      # Passo 4: Rodar testes e build com Maven (ou Gradle)
      - name: Executar Maven Build
        run: mvn clean install -f backend/pom.xml

  frontend:
    runs-on: ubuntu-latest
    steps:
      # Passo 1: Checkout do código
      - name: Checkout do código
        uses: actions/checkout@v2

      # Passo 2: Navegar até o diretório do frontend
      - name: Mudar para o diretório do frontend
        run: cd frontend

      # Passo 3: Instalar Node.js
      - name: Configurar Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      # Passo 4: Instalar dependências
      - name: Instalar dependências do frontend
        run: npm install

      # Passo 5: Rodar os testes do frontend
      - name: Executar testes do frontend
        run: npm test

      # Passo 6: Construir a aplicação do frontend (caso necessário)
      - name: Build do frontend
        run: npm run build

  deploy:
    runs-on: ubuntu-latest
    needs: [backend, frontend]
    steps:
      # Passo 1: Checkout do código
      - name: Checkout do código
        uses: actions/checkout@v2

      # Passo 2: Navegar até o diretório do backend
      - name: Mudar para o diretório do backend
        run: cd backend

      # Passo 3: Configurar JDK para deploy (caso necessário)
      - name: Configurar JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adoptopenjdk'

      # Passo 4: Realizar deploy (exemplo com SCP para um servidor remoto)
      - name: Deploy do backend para o servidor
        run: |
          scp -i ${{ secrets.SSH_PRIVATE_KEY }} backend/target/*.jar usuario@servidor:/caminho/do/deploy/

      # Passo 5: Realizar deploy do frontend (exemplo de envio para um servidor)
      - name: Deploy do frontend para o servidor
        run: |
          scp -i ${{ secrets.SSH_PRIVATE_KEY }} -r frontend/build/* usuario@servidor:/caminho/do/deploy/
